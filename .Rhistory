makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
new_counter <- function() {
i <- 0
function() {
# do something useful, then ...
i <<- i + 1
i
}
}
counter_one <- new_counter()
counter_one()
counter_one()
counter_one()
counter_one()
counter_one()
counter_one()
new_counter <- function() {
i <- 0
function() {
# do something useful, then ...
i <- i + 1
i
}
}
counter_one <- new_counter()
counter_one()
counter_one()
counter_one()
new_counter <- function() {
i <- 0
print(i)
function() {
# do something useful, then ...
i <- i + 1
i
}
}
counter_one <- new_counter()
counter_one()
counter_one()
counter_one()
counter_one()
new_counter <- function() {
i <- 0
print("i: ",i)
function() {
# do something useful, then ...
i <- i + 1
i
}
}
counter_one <- new_counter()
counter_one()
new_counter <- function() {
i <- 0
cat("i: ",i)
function() {
# do something useful, then ...
i <- i + 1
i
}
}
counter_one()
counter_one <- new_counter()
counter_one()
counter_one()
counter_one()
counter_one()
counter_one()
new_counter <- function() {
i <- 0
cat("i: ",i)
function() {
# do something useful, then ...
i <- i + 1
cat("i: 2",i)
i
}
}
counter_one <- new_counter()
counter_one()
counter_one()
counter_one()
counter_one()
new_counter <- function() {
i <- 0
cat("\ni: ",i)
function() {
# do something useful, then ...
i <- i + 1
cat("\ni: 2",i)
i
}
}
counter_one <- new_counter()
counter_one()
debug(counter_one)
debug(counter_one)
debug(counter_one)
debug(counter_one)
trace(counter_one)
trace(counter_one)
View(new_counter)
debug(counter_one)
mvec <- makeVector()
mvec <- makeVector()
x <- 1:4
mvec$set(x)
mvec$get()
mvec$getmean()
mvec$setmean()
mvec$setmean(mean(x))
mvec$getmean()
cachemean(mvec)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
setwd("~/Data Specialization Johns Hopkins University/05_Reproducible Research/Week1/RepData_PeerAssessment1")
# Load the data
activity <- read.csv("activity.csv")
activity
View(activity)
activity$date <- as.POSIXct(activity$date)
activity
#Check the total NA
table(is.na(activity))
#Check the total NA
rowSums(is.na(activity))
#Check the total NA
sums(is.na(activity))
#Check the total NA
sum(is.na(activity))
#Check the total NA
sum(is.na(activity$steps))
#Check the total NA
sum(is.na(activity$date))
#Check the total NA
sum(is.na(activity$interval))
library(ggplot2)
colSums(is.na(df))
colSums(is.na(activity))
#Check the total NA
colSums(is.na(activity))
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
class(activity)
activity
head(activity)
activity <- tbl_df(activity)
activity
# Load the data
activity <- read.csv("activity.csv")
#Check the total NA in each colums
colSums(is.na(activity))
activity$date <- as.Date(activity$date)
activity <- tbl_df(activity)
activity
View(activity)
View(activity)
steps <- aggregate(steps~date,activity,sum, na.rm = TRUE)
View(activity)
activity_day <- aggregate(steps~date,activity,sum, na.rm = TRUE)
g <- ggplot(activity_day, aes(steps))
g + geom_histogram()
steps <- aggregate(steps~date,activity,sum, na.rm = TRUE)
hist(steps$steps,main = "Steps per Day", xlab = "Total Steps per Day", ylab = "Number of Days", col = "blue")
View(activity_day)
View(activity)
g <- ggplot(activity_day, aes(activity_day$steps))
g + geom_histogram()
g <- ggplot(activity_day, aes(steps))
g + geom_histogram()
bw <- 2 * IQR(activity_day$steps) / length(activity_day$steps)^(1/3)
g + geom_histogram(binwidth = bw)
library(ggthemes)
insertClassMethods(ggthemes)
install.packages("ggthemes")
library(ggthemes)
bw <- 2 * IQR(activity_day$steps) / length(activity_day$steps)^(1/3)
g <- ggplot(activity_day, aes(steps))
g + geom_histogram(binwidth = bw)
g + geom_histogram(binwidth = bw, fill = "steelblue")
g + geom_histogram(binwidth = bw, fill = "steelblue", alpha = 0.2)
g + geom_histogram(binwidth = bw,color="black", fill = "steelblue", alpha = 0.2)
bw <- 2 * IQR(activity_day$steps) / length(activity_day$steps)^(1/3)
g <- ggplot(activity_day, aes(steps))
g + geom_histogram(binwidth = bw,color="black", fill = "steelblue", alpha = 0.2)
+ labs(title="Histogram of steps per day", x="Steps per day", y="Days Frequency")
ggplot(activity_day, aes(steps)) +
geom_histogram(binwidth = bw,color="black", fill = "steelblue", alpha = 0.2) +
labs(title="Histogram of steps per day", x="Steps per day", y="Days Frequency")
summary(activity_day)
summary(activity_day$steps)
summary_act_day <- summary(activity_day$steps)
summary_act_day <- summary(activity_day$steps)
str(summary_act_day)
summary_act_day <- summary(activity_day$steps)
(summary_act_day)
summary_act_day["Mean"]
(summary_act_day)
The median of the total number of steps taken per day is `r summary_act_day["Median"]`
summary_act_day <- summary(activity_day$steps)
mean_sd <- mean(activity_day$steps)
mean_steps <- median(activity_day$steps)
mean_steps <- mean(activity_day$steps)
median_steps <- median(activity_day$steps)
mean_steps
mean_steps <- mean(activity_day$steps)
median_steps <- median(activity_day$steps)
median_steps <- as.numeric(median(activity_day$steps))
mean_steps <- as.numeriv((activity_day$steps))
mean_steps <- as.numeric((activity_day$steps))
median_steps <- as.numeric(median(activity_day$steps))
